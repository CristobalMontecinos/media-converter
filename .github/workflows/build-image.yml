name: Docker Image CI

on:
  pull_request:
    branches: ['main']

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup node 22
        uses: actions/setup-node@v2
        with:
          node-version: '22'

      - name: Install dependencies & Compile
        id: deps
        env:
          AWS_REGION: ${{ vars.AWS_REGION }}
        run: |
          cd ./src_node
          IMAGE_TAG=$(curl -s https://raws.redmin.cl/ecr/$AWS_REGION/media-converter/lastTag?element=nextTag)
          npm install
          npm run build
          rm -rf node_modules
          cd ../

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ vars.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          AWS_REGION: ${{ vars.AWS_REGION }}
        run: |
          IMAGE_TAG=$(curl -s https://raws.redmin.cl/ecr/$AWS_REGION/media-converter/lastTag?element=nextTag)
          docker build -t $ECR_REGISTRY/media-converter:$IMAGE_TAG .
          docker push $ECR_REGISTRY/media-converter:$IMAGE_TAG
          echo "image=$ECR_REGISTRY/media-converter:$IMAGE_TAG" >> $GITHUB_OUTPUT
